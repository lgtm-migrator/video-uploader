---
AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates a bucket to store uploaded files"

Parameters:
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
  FrontendDomain:
    Type: String
  BackendDomain:
    Type: String
  FrontendWebsiteCertificate:
    Type: String

Resources:
  VideoUploads:
    Type: "AWS::S3::Bucket"
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: "Enabled"
      AccessControl: "Private"
      LifecycleConfiguration:
        Rules:
        - AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 2
          Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods:
            - "HEAD"
            - "GET"
            - "PUT"
            - "POST"
            AllowedOrigins: ["*"]
            ExposedHeaders:
            - "etag"
  
  FrontendWebsite:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "PublicRead"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"
  
  FrontendWebsiteBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref "FrontendWebsite"
      PolicyDocument:
        "Version": "2012-10-17"
        "Statement":
        - "Effect": "Allow"
          "Principal": "*"
          "Action":
          - "s3:GetObject"
          "Resource":
          - !Sub "arn:aws:s3:::${FrontendWebsite}/*"

  FrontendDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
        - !Ref FrontendDomain
        CacheBehaviors:
        - AllowedMethods:
          - "GET"
          - "HEAD"
          CachedMethods:
          - "GET"
          - "HEAD"
          CachePolicyId: "4135ea2d-6df8-44a3-9df3-4b5a84be39ad" # "Managed-CachingDisabled"
          Compress: true
          PathPattern: "index.html"
          TargetOriginId: !Sub "${AWS::StackName}-FrontendOrigin"
          ViewerProtocolPolicy: "redirect-to-https"
        DefaultRootObject: "index.html"
        DefaultCacheBehavior:
          AllowedMethods:
          - "GET"
          - "HEAD"
          CachedMethods:
          - "GET"
          - "HEAD"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # "Managed-CachingOptimized"
          Compress: true
          TargetOriginId: !Sub "${AWS::StackName}-FrontendOrigin"
          ViewerProtocolPolicy: "redirect-to-https"
        Enabled: true
        HttpVersion: "http2"
        IPV6Enabled: true
        Origins:
        - CustomOriginConfig:
            OriginProtocolPolicy: "http-only"
          DomainName: !Sub "${FrontendWebsite}.s3-website-${AWS::Region}.amazonaws.com"
          Id: !Sub "${AWS::StackName}-FrontendOrigin"
        PriceClass: 'PriceClass_All'
        ViewerCertificate:
          AcmCertificateArn: !Ref 'FrontendWebsiteCertificate'
          MinimumProtocolVersion: 'TLSv1.1_2016'
          SslSupportMethod: 'sni-only'
  
  FrontendDNSIPv4:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt "FrontendDistribution.DomainName"
        HostedZoneId: "Z2FDTNDATAQYW2"
      HostedZoneId: !Ref "HostedZoneId"
      Name: !Ref "FrontendDomain"
      Type: "A"

  FrontendDNSIPv6:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt "FrontendDistribution.DomainName"
        HostedZoneId: "Z2FDTNDATAQYW2"
      HostedZoneId: !Ref "HostedZoneId"
      Name: !Ref "FrontendDomain"
      Type: "AAAA"

Outputs:
  AcceleratedEndpoint:
    Value: !Sub "${VideoUploads}.s3-accelerate.amazonaws.com"
  FrontendURL:
    Value: !GetAtt "FrontendDistribution.DomainName"
    